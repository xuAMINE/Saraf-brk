spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/jwt_security
    username: ${DB_USER}
    password: ${DB_PASSWORD_DEV}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true
        show_sql: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET}
            scope: profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_SECRET}
            scope: public_profile, email
            redirect-uri: "{baseUrl}/login/oauth2/code/facebook"

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: false
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

application:
  security:
    jwt:
      secret-key: ${JWT_SECRET_KEY}
      expiration: 1200000 # 20 minute 1200000
      refresh-token:
        expiration: 604800000 # 7 days
  mailing:
    frontend:
      activation-url: ${ACTIVATION_URL}
  cors:
    origins: ${CORS_ORIGINS_DEV}

logging:
  level:
    root: INFO
    org.springframework.web: WARN
    org:
      springframework:
        security: DEBUG
        web: DEBUG
  file:
    name: /var/log/spring-boot-app/app.log

server:
  port: 8088
