name : SRF API Pipeline

on:
  push:
    branches:
      - ci/pipeline

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Compile project

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile project
        run: mvn clean compile

  unit-tests:
    runs-on: ubuntu-latest
    name: Unit tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Running unit Tests
        run: mvn clean test

  build:
    runs-on: ubuntu-latest
    name: Build SRF
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: mvn clean package

  build-image:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Extract project version
        id: extract_version
        run:
          echo "VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/srf-api:${{ steps.extract_version.outputs.VERSION }}, ${{ secrets.DOCKERHUB_USERNAME }}/srf-api:latest
          build-args:
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}

  deploy:
    name: Delpoy Backend
    runs-on: ubuntu-latest
    needs: [build-image]
    steps:
      - name: Create deployment folder
        run: ssh -i sarafKEY.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} "mkdir -p ci-cd"

      - name: Copy docker-compose file
        run: scp docker-compose.yml ec2-user@${{ secrets.EC2_PUBLIC_IP }}:ci-cd/docker-compose.yml

      - name: Set ENV variables and deploy
        run: |
          ssh -i sarafKEY.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} <<EOF
          export EMAIL_HOSTNAME=${{ secrets.EMAIL_HOSTNAME }}
          export EMAIL_USER_NAME=${{ secrets.EMAIL_USER_NAME }}
          export EMAIL_USER_PASSWORD=${{ secrets.EMAIL_USER_PASSWORD }}
          cd ci-cd
          docker-compose -f docker-compose.yml pull -q
          docker-compose -f docker-compose.yml up -d
          EOF